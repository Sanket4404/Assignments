/*
Queues are frequently used in computer programming, and a typical example is the creation of a
job queue by an operating system.
If the operating system does not use priorities, then the jobs are processed in the order they enter
the system.
Write C++ program for simulating job queue. Write functions to add job and delete job from
queue.
*/

#include &lt;iostream&gt;
#define MAX 10
using namespace std;
struct queue
{ int data[MAX];
int front,rear;
};
class Queue
{ struct queue q;

public:
Queue(){q.front=q.rear=-1;}
int isempty();
int isfull();
void enqueue(int);
int delqueue();
void display();
};
int Queue::isempty()
{
return(q.front==q.rear)?1:0;
}
int Queue::isfull()
{ return(q.rear==MAX-1)?1:0;}
void Queue::enqueue(int x)
{q.data[++q.rear]=x;}
int Queue::delqueue()
{return q.data[++q.front];}
void Queue::display()

{ int i;
cout&lt;&lt;&quot;\n&quot;;
for(i=q.front+1;i&lt;=q.rear;i++)
cout&lt;&lt;q.data[i]&lt;&lt;&quot; &quot;;
}
int main()
{ Queue obj;
int ch,x;
do{ cout&lt;&lt;&quot;\n 1.Insert Job\n 2.Delete Job\n 3.Display\n 4.Exit\n Enter your choice : &quot;;
cin&gt;&gt;ch;
switch(ch)
{ case 1: if (!obj.isfull())
{ cout&lt;&lt;&quot;\n Enter data : \n&quot;;
cin&gt;&gt;x;
obj.enqueue(x);
cout&lt;&lt;endl;
}
else

cout&lt;&lt; &quot;Queue is overflow!!!\n\n&quot;;
break;
case 2: if(!obj.isempty())
cout&lt;&lt;&quot;\n Deleted Element = &quot;&lt;&lt;obj.delqueue()&lt;&lt;endl;
else
{ cout&lt;&lt;&quot;\n Queue is underflow!!!\n\n&quot;; }
cout&lt;&lt;&quot;\nRemaining Jobs : \n&quot;;
obj.display();
break;
case 3: if (!obj.isempty())
{ cout&lt;&lt;&quot;\n Queue contains : \n&quot;;
obj.display();
}
else
cout&lt;&lt;&quot;\n Queue is empty!!!\n\n&quot;;
break;
case 4: cout&lt;&lt;&quot;\n Exiting Program.....&quot;;
}

}while(ch!=4);
return 0;
}
